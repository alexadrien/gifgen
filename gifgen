#!/bin/bash

# Echo help/usage message
show_help() {
  echo "gifgen 1.0.1"
  echo
  echo "Usage: gifgen [options]"
  echo
  echo "Options:"
  echo "  -i   Input file"
  echo "  -o   Output file [input.gif]"
  echo "  -f   Frames per second [10]"
  echo "  -v   Display verbose output from ffmpeg"
  echo
  echo "Examples:"
  echo "  $ gifgen -i screencap.mp4"
  echo "  $ gifgen -i SCM_1457.mov -o demo.gif"
  echo "  $ gifgen -i screencap.mp4 -f 15"
}

# Setup defaults
pid=$$
palette="/tmp/gif-palette-$pid.png"
fps="10"
verbosity="warning"

# Parse args
while getopts "hi:o:f:v" opt; do
  case "$opt" in
    h)
      show_help=true
      ;;
    i)
      input=$OPTARG
      ;;
    o)
      output=$OPTARG
      ;;
    f)
      fps=$OPTARG
      ;;
    v)
      verbosity="info"
      ;;
  esac
done

# Show help and exit if we have no input
[[ "$input" = "" ]] || [[ $show_help = true ]] && show_help && exit

# Check for ffmpeg before encoding
type ffmpeg >/dev/null 2>&1 || {
  echo "Error: gifgen requires ffmpeg to be installed"
  exit 1
}

# Set output if not specified
if [[ "$output" = "" ]]; then
  input_filename=${input##*/}
  output=${input_filename%.*}.gif
fi

# Encode GIF
echo "Generating palette..."
ffmpeg -v $verbosity -i $input -vf "fps=$fps,palettegen" -y $palette
[[ "$verbosity" = "info" ]] && echo
echo "Encoding GIF..."
ffmpeg -v $verbosity -i $input -i $palette -lavfi "fps=$fps [x]; [x][1:v] paletteuse" -y $output
echo "Done!"
